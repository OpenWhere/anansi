/*
 * Copyright (c) 2012-2013 Ray A. Conner
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

apply plugin: 'java'

// Task: publishToMavenLocal
//   installs jars to local maven cache
apply plugin: 'maven-publish'

// Task: release
//   cuts a release of the project, prompts the user during the task
//apply plugin: 'release'

// Task: cobertura
//   builds test coverage reports
apply plugin: 'cobertura'

// Task: duplicates
//   detects duplicate classes on the classpath
apply plugin: 'duplicates'

// Task: dependencyUpdates
//   shows which dependencies have a later version available
apply plugin: 'versions'

sourceCompatibility = 1.6
targetCompatibility = 1.6
group = 'com.github.rconner'

task wrapper( type: Wrapper ) {
    gradleVersion = '1.9'
}

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.townsfolk:gradle-release:1.2'
        classpath 'net.saliman:gradle-cobertura-plugin:2.1.0'
        classpath 'com.github.goldin.plugins.gradle:duplicates:0.3.1'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.4'
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.debug( debugLevel : 'source,lines,vars' )
    options.compilerArgs = [ '-Xlint:all' ]
}

compileTestJava {
    options.encoding = 'UTF-8'
    options.debug( debugLevel: 'source,lines,vars' )
    options.compilerArgs = [ '-Xlint:all' ]
}

dependencies {
    compile 'com.google.guava:guava:15.0'
    testCompile 'junit:junit:4.11'
}


// Show stdout and stderr when running tests

test {
    testLogging.showStandardStreams = true
}


// configure cobertura plugin

cobertura {
    coverageIgnoreMethodAnnotations = [ 'com.github.rconner.util.NoCoverage' ]
    coverageFormats = [ 'html', 'xml' ]
}


// configure some manifest entries, and use them
// these are manifest entries I've seen elsewhere

ext.sharedManifest = manifest {
    attributes( 'Created-By': "Gradle $gradle.gradleVersion" )
    attributes( 'Built-By': System.getProperty( 'user.name' ) )
    attributes( 'Build-Jdk': System.getProperty( 'java.version' ) )

    attributes( 'Implementation-Title': project.name )
    attributes( 'Implementation-Version': version )
    attributes( 'Implementation-Vendor': 'Ray A. Conner' )
    attributes( 'Implementation-Vendor-Id': group )
    attributes( 'Specification-Title': project.name )
    attributes( 'Specification-Version': version )
    attributes( 'Specification-Vendor': 'Ray A. Conner' )

    attributes( 'X-Compile-Source-JDK': sourceCompatibility )
    attributes( 'X-Compile-Target-JDK': targetCompatibility )

    attributes( 'Bundle-DocURL': 'https://github.com/rconner/anansi' )
    attributes( 'Bundle-License': 'http://opensource.org/licenses/MIT' )
}

// configure what goes in the jars

jar {
    // Hack. See:
    //   http://forums.gradle.org/gradle/topics/how_do_i_place_the_pom_generated_from_the_maven_publish_plugin_inside_the_jar
    //   http://issues.gradle.org/browse/GRADLE-2916
    dependsOn 'generatePomFileForMavenJavaPublication'
    from( 'build/publications/mavenJava/pom-default.xml' ) {
        into "META-INF/maven/$project.group/$project.name"
        rename '.*', 'pom.xml'
    }

    from( 'LICENSE.txt' ) {
        into 'META-INF'
    }
    manifest {
        from sharedManifest
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
    from( 'LICENSE.txt' ) {
        into 'META-INF'
    }
    manifest {
        from sharedManifest
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
    from( 'LICENSE.txt' ) {
        into 'META-INF'
    }
    manifest {
        from sharedManifest
    }
}

// maven publishing configuration

publishing {
    publications {
        mavenJava( MavenPublication ) {
            from components.java
            artifacts = [ jar, sourcesJar, javadocJar ]
            pom.withXml {
                asNode().appendNode( 'url', 'https://github.com/rconner/anansi' )
                asNode().appendNode( 'description', 'A Java library with traversal primitives and operations for graph-like structures.' )
                asNode().appendNode( 'inceptionYear', '2003' )
                def license = asNode().appendNode( 'licenses' ).appendNode( 'license' )
                license.appendNode( 'name', 'The MIT License (MIT)' )
                license.appendNode( 'url', 'http://opensource.org/licenses/MIT' )
            }
        }
    }
}
